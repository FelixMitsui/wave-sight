{"version":3,"file":"616.chunk.js","mappings":"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","sources":["webpack://wave_sight/./src/components/BreadCrumb/index.js","webpack://wave_sight/./src/components/Loading/index.js","webpack://wave_sight/./src/containers/CartItem/index.js","webpack://wave_sight/./src/pages/common/Cart/index.js","webpack://wave_sight/./public/assets/images/empty-cart-icon.png"],"sourcesContent":["/** @format */\r\n\r\nimport React from 'react';\r\nimport { Breadcrumb } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst BreadCrumb = props => {\r\n    const matchName = location.pathname.startsWith('/wave-sight')\r\n        ? location.pathname.substring('/wave-sight'.length)\r\n        : location.pathname;\r\n    return (\r\n        <Breadcrumb className=\"m-3\">\r\n            {props.matches.map((match, index) => {\r\n                const { path, breadcrumbName } = match.route;\r\n                const isActive = match.pathname === matchName;\r\n\r\n                return isActive ? (\r\n                    <Breadcrumb.Item className=\"font-content fs-5 fw-bold\" key={index} active>\r\n                        {breadcrumbName === 'Detail' ? props.name : breadcrumbName}\r\n                    </Breadcrumb.Item>\r\n                ) : (\r\n                    <Breadcrumb.Item className=\"font-content fs-5 fw-bold\" key={index}>\r\n                        <NavLink to={path}>{breadcrumbName}</NavLink>\r\n                    </Breadcrumb.Item>\r\n                );\r\n            })}\r\n        </Breadcrumb>\r\n    );\r\n};\r\nexport default BreadCrumb;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction Loading() {\r\n return (\r\n  <>\r\n   <div className=\"h-100 index-3 opacity-50 position-fixed start-0 top-0 w-100\">\r\n    <Spinner\r\n     className=\"bg-black position-relative start-50 top-50\"\r\n     animation=\"grow\"\r\n    />\r\n   </div>\r\n  </>\r\n );\r\n}\r\n\r\nexport default Loading;\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect, useRef, memo } from 'react';\r\nimport { Button, Image } from 'react-bootstrap';\r\n\r\nconst CartItem = ({\r\n item,\r\n number,\r\n user_id = '',\r\n onTotalCalculate,\r\n handleItemQuantity = null,\r\n onDeleteItem = null,\r\n isEdit = true,\r\n}) => {\r\n const {\r\n  product_mark,\r\n  product_image,\r\n  product_name,\r\n  product_color,\r\n  product_size,\r\n  product_quantity,\r\n  product_discount,\r\n  product_price,\r\n } = item;\r\n\r\n const quantityRef = useRef(product_quantity);\r\n const [disabled, setDisabled] = useState(false);\r\n\r\n useEffect(() => {\r\n  onTotalCalculate(product_price * quantityRef.current * product_discount);\r\n }, []);\r\n\r\n const handleCalculate = event => {\r\n  const target = event.target.value;\r\n\r\n  if (target === '+') {\r\n   if (quantityRef.current >= 1) {\r\n    quantityRef.current++;\r\n    onTotalCalculate(product_price * product_discount);\r\n    setDisabled(false);\r\n   }\r\n   handleItemQuantity({\r\n    user_id,\r\n    product_mark,\r\n    product_quantity: quantityRef.current,\r\n   });\r\n   return;\r\n  }\r\n\r\n  if (target === '-') {\r\n   if (quantityRef.current <= 1) {\r\n    setDisabled(true);\r\n    return;\r\n   }\r\n   quantityRef.current--;\r\n   onTotalCalculate(-product_price * product_discount);\r\n   handleItemQuantity({\r\n    user_id,\r\n    product_mark,\r\n    product_quantity: quantityRef.current,\r\n   });\r\n   return;\r\n  }\r\n };\r\n\r\n return (\r\n  <tr className=\"border-light-gray font-content text-center\">\r\n   <th>{number + 1}</th>\r\n   <th>\r\n    <Image\r\n     fluid={true}\r\n     responsive=\"md\"\r\n     thumbnail={true}\r\n     width={100}\r\n     height={100}\r\n     className=\"d-block mx-auto\"\r\n     src={product_image}\r\n    />\r\n   </th>\r\n   <th>{product_name}</th>\r\n   <th>{product_color}</th>\r\n   <th>{product_size}</th>\r\n   <th>\r\n    {isEdit ? (\r\n     <div className=\"d-flex\">\r\n      <input\r\n       className=\"btn-gray me-1\"\r\n       type=\"button\"\r\n       disabled={disabled}\r\n       value=\"-\"\r\n       onClick={handleCalculate}\r\n      />\r\n      {quantityRef.current}\r\n      <input\r\n       className=\"btn-gray ms-1\"\r\n       type=\"button\"\r\n       value=\"+\"\r\n       onClick={handleCalculate}\r\n      />\r\n     </div>\r\n    ) : (\r\n     quantityRef.current\r\n    )}\r\n   </th>\r\n   <th>NT{Math.floor(product_price * quantityRef.current * product_discount)}$</th>\r\n   {isEdit ? (\r\n    <th>\r\n     <Button\r\n      className=\"border border-1 border-black btn-beige font-content mt-2\"\r\n      onClick={() =>\r\n       onDeleteItem(\r\n        {\r\n         user_id,\r\n         product_mark,\r\n        },\r\n        product_price * quantityRef.current * product_discount\r\n       )\r\n      }\r\n     >\r\n      Delete\r\n     </Button>\r\n    </th>\r\n   ) : null}\r\n  </tr>\r\n );\r\n};\r\nfunction areEqual(prevProps, nextProps) {\r\n if (prevProps.item.product_quantity !== nextProps.item.product_quantity) {\r\n  return false;\r\n }\r\n return true;\r\n}\r\nexport default memo(CartItem, areEqual);\r\n","/** @format */\r\n\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { Table, Stack, Button, Row, Col, Badge } from 'react-bootstrap';\r\nimport { matchRoutes, useNavigate } from 'react-router-dom';\r\nimport { routes } from '../../../router/routesList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userTypes } from '../../../redux/userModule';\r\nimport Loading from '../../../components/Loading';\r\nimport CartItem from '../../../containers/CartItem';\r\nimport BreadCrumb from '../../../components/BreadCrumb';\r\n\r\nconst Cart = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const matchName = location.pathname.startsWith('/wave-sight')\r\n        ? location.pathname.substring('/wave-sight'.length)\r\n        : location.pathname;\r\n    const matches = matchRoutes(routes, matchName);\r\n    const {\r\n        info: { _id, shopping_cart },\r\n        isLogin,\r\n    } = useSelector(state => state.user);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [totalCash, setTotalCash] = useState(0);\r\n    const loginToken = localStorage.getItem('loginToken');\r\n\r\n    useEffect(() => {\r\n        if (!loginToken && !isLogin) {\r\n            navigate('/');\r\n        }\r\n    }, [isLogin]);\r\n\r\n    const handleTotalCalculate = useCallback(price => {\r\n        setTotalCash(prev => prev + price);\r\n    }, []);\r\n\r\n    const handleItemQuantity = useCallback(updateInfo => {\r\n        setIsLoading(true);\r\n        dispatch({\r\n            type: userTypes.UPDATE_ITEM_QUANTITY_REQUEST,\r\n            payload: updateInfo,\r\n        });\r\n        setTimeout(() => {\r\n            setIsLoading(false);\r\n        }, 1000);\r\n    }, []);\r\n    const handleDeleteItem = useCallback((userInfo, price) => {\r\n        setTotalCash(prev => prev - price);\r\n        dispatch({ type: userTypes.DELETE_CART_ITEM_REQUEST, payload: userInfo });\r\n    }, []);\r\n\r\n    const handleCheckout = () => {\r\n        if (shopping_cart.length === 0) {\r\n            dispatch({ type: userTypes.WARNING_MESSAGE_REQUEST, payload: 'Cart is empty.' });\r\n            return;\r\n        }\r\n        navigate('/user/checkout');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? <Loading /> : null}\r\n            <BreadCrumb matches={matches} />\r\n            <div className=\"bg-gray\">\r\n                <h1 className=\"border font-title mt-2 text-center text-white\">Cart</h1>\r\n            </div>\r\n            <Row className=\"border m-2  p-2 position-relative\">\r\n                {shopping_cart?.length === 0 ? (\r\n                    <div className=\"end-0 position-absolute start-0 top-0\">\r\n                        <img\r\n                            className=\"object-fit-cover w-100\"\r\n                            src={require(`${process.env.ASSETS_PATH}empty-cart-icon.png`).default}\r\n                        />\r\n                        <h2 className=\"end-0 position-absolute start-0 text-center top-50\">\r\n                            There are currently no products available.\r\n                        </h2>\r\n                    </div>\r\n                ) : null}\r\n                <Col>\r\n                    {shopping_cart?.length === 0 ? null : (\r\n                        <Table bordered hover striped responsive className=\"border-light-gray\">\r\n                            <thead>\r\n                                <tr className=\"font-content text-center\">\r\n                                    <th>No.</th>\r\n                                    <th>Image</th>\r\n                                    <th>Name</th>\r\n                                    <th>Color</th>\r\n                                    <th>Size</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Price</th>\r\n                                    <th>Edit</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {shopping_cart?.map((item, index) => (\r\n                                    <CartItem\r\n                                        key={item.product_mark}\r\n                                        number={index}\r\n                                        user_id={_id}\r\n                                        item={item}\r\n                                        onTotalCalculate={handleTotalCalculate}\r\n                                        handleItemQuantity={handleItemQuantity}\r\n                                        onDeleteItem={handleDeleteItem}\r\n                                    />\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n                <Stack\r\n                    direction=\"horizontal\"\r\n                    gap={3}\r\n                    className=\"d-flex fs-2 justify-content-end mt-2\"\r\n                >\r\n                    <Badge className=\"bg-deep-gray font-content\">\r\n                        Totall:{Math.floor(totalCash)}$\r\n                    </Badge>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"bg-beige border border-black font-btn fs-5 fw-bold text-black\"\r\n                        onClick={handleCheckout}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </Stack>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Cart;\r\n","export default __webpack_public_path__ + \"public/assets/images/empty-cart-icon.png\";"],"names":["props","matchName","location","pathname","startsWith","substring","length","React","Breadcrumb","className","matches","map","match","index","_match$route","route","path","breadcrumbName","key","active","name","NavLink","to","Spinner","animation","CartItem","_ref","item","number","_ref$user_id","user_id","onTotalCalculate","_ref$handleItemQuanti","handleItemQuantity","_ref$onDeleteItem","onDeleteItem","_ref$isEdit","isEdit","product_mark","product_image","product_name","product_color","product_size","product_quantity","product_discount","product_price","quantityRef","useRef","_useState","useState","_useState2","_slicedToArray","disabled","setDisabled","useEffect","current","handleCalculate","event","target","value","Image","fluid","responsive","thumbnail","width","height","src","type","onClick","Math","floor","Button","areEqual","prevProps","nextProps","memo","dispatch","useDispatch","navigate","useNavigate","matchRoutes","routes","_useSelector","useSelector","state","user","_useSelector$info","info","_id","shopping_cart","isLogin","isLoading","setIsLoading","_useState3","_useState4","totalCash","setTotalCash","loginToken","localStorage","getItem","handleTotalCalculate","useCallback","price","prev","updateInfo","userTypes","payload","setTimeout","handleDeleteItem","userInfo","Loading","BreadCrumb","Row","require","Col","Table","bordered","hover","striped","Stack","direction","gap","Badge","size"],"sourceRoot":""}