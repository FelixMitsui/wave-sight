{"version":3,"file":"152.chunk.js","mappings":"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","sources":["webpack://wave_sight/./src/hooks/useEditInterface.js","webpack://wave_sight/./src/components/UserItem/index.tsx","webpack://wave_sight/./src/components/UserTable/index.js","webpack://wave_sight/./src/components/UserForm/index.js","webpack://wave_sight/./src/pages/manage/EditUser/index.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useEditInterface = () => {\r\n    const [isDisplay, setIsDisplay] = useState(false);\r\n    const [value, setValue] = useState(null);\r\n\r\n    const handleOpenInterface = item => {\r\n        setIsDisplay(true);\r\n        setValue(item);\r\n    };\r\n\r\n    const handleCloseInterface = () => {\r\n        setIsDisplay(false);\r\n        setValue(null);\r\n    };\r\n\r\n    return { isDisplay, value, setValue, handleOpenInterface, handleCloseInterface };\r\n};\r\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nvar UserItem = function (_a) {\n    var item = _a.item, onOpenInterface = _a.onOpenInterface, number = _a.number;\n    var user_name = item.user_name, user_email = item.user_email, user_address = item.user_address, user_role = item.user_role, user_status = item.user_status, create_time = item.create_time;\n    return (React.createElement(\"tr\", { className: \"font-content text-center\" },\n        React.createElement(\"td\", null, number + 1),\n        React.createElement(\"td\", null, user_name),\n        React.createElement(\"td\", null, user_email),\n        React.createElement(\"td\", null, user_address),\n        React.createElement(\"td\", null, user_role),\n        React.createElement(\"td\", null, Number(user_status)),\n        React.createElement(\"td\", null, create_time),\n        React.createElement(\"td\", null,\n            React.createElement(Button, { type: \"button\", size: \"sm\", className: \"text-white border border-2 btn-gray m-1\", onClick: function () { return onOpenInterface(item); } }, \"Modify\"))));\n};\nexport default UserItem;\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport UserItem from '../../components/UserItem'\r\nconst UserTable = ({ items, onOpenInterface }) => {\r\n\r\n    return (\r\n        <Table striped bordered hover responsive className=\"border-light-gray\">\r\n            <thead className=\"font-content fs-6 text-center\">\r\n                <tr>\r\n                    <th>No.</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Address</th>\r\n                    <th>Role</th>\r\n                    <th>Status</th>\r\n                    <th>Create Time</th>\r\n                    <th>Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items?.map((item, index) => (\r\n                    <UserItem key={item._id} item={item} number={index} onOpenInterface={onOpenInterface} />\r\n                ))}\r\n\r\n            </tbody>\r\n        </Table>\r\n    )\r\n};\r\nexport default UserTable;\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FoldIcon from '../../../src/Icons/FoldIcon';\r\nimport { Col } from 'react-bootstrap';\r\n\r\nconst UserForm = ({ item, setUserValue, onUpdateUser, onCloseInterface }) => {\r\n    const {\r\n        _id: user_id,\r\n        user_name,\r\n        user_email,\r\n        user_address,\r\n        user_role,\r\n        user_status,\r\n    } = item;\r\n\r\n    const handleInputValue = event => {\r\n        setUserValue(prev => ({ ...prev, [event.target.name]: event.target.value }));\r\n    };\r\n\r\n    const handleStatusValue = event => {\r\n        if (event.target.checked) {\r\n            setUserValue(prev => ({ ...prev, [event.target.name]: !user_status }));\r\n        } else {\r\n            setUserValue(prev => ({ ...prev, [event.target.name]: !user_status }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={onUpdateUser({\r\n            user_id,\r\n            user_role,\r\n            user_status,\r\n            user_address,\r\n        })} className=\"p-2 d-flex flex-column position-relative\">\r\n            <Form.Group className=\"mb-3 ms-2\">\r\n                <Form.Label className=\"font-content fs-5 fw-bold\">Name</Form.Label>\r\n                <Form.Label className=\" ms-2\">\r\n                    {user_name}\r\n                </Form.Label>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3 ms-2\">\r\n                <Form.Label className=\"font-content fs-5 fw-bold\">Email</Form.Label>\r\n                <Form.Label className=\"ms-2\">\r\n                    {user_email}\r\n                </Form.Label>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3 ms-2\">\r\n                <Form.Label className=\"font-content fs-5 fw-bold\">Address</Form.Label>\r\n                <Form.Control\r\n                    name=\"user_address\"\r\n                    className=\"ms-2\"\r\n                    value={user_address}\r\n                    onChange={event => handleInputValue(event)}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3 ms-2\">\r\n                <Form.Label className=\"font-content fs-5 fw-bold\">Role</Form.Label>\r\n                {['general', 'admin'].map(type => (\r\n                    <Form.Check\r\n                        key={`inline-${type}`}\r\n                        label={type}\r\n                        value={type}\r\n                        checked={user_role === type ? true : false}\r\n                        name=\"user_role\"\r\n                        type=\"radio\"\r\n                        className=\"font-content ms-2\"\r\n                        onChange={event => handleInputValue(event)}\r\n                    />\r\n                ))}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3 ms-2\">\r\n                <Form.Label className=\"font-content fs-5 fw-bold\">Status</Form.Label>\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    name=\"user_status\"\r\n                    className=\"ms-2\"\r\n                    checked={user_status}\r\n                    onChange={event => handleStatusValue(event)}\r\n                />\r\n            </Form.Group>\r\n            <Button\r\n                type=\"submit\"\r\n                size=\"sm\"\r\n                className=\"btn-gray text-white font-btn fs-5 mb-2 align-self-end\"\r\n            >\r\n                Submit\r\n            </Button>\r\n            <FoldIcon\r\n                className=\"text-deep-gray position-relative start-50 bottom-0\"\r\n                onClick={() => onCloseInterface()}\r\n                viewBox=\"0 0 18 18\"\r\n                width=\"33\"\r\n                height=\"33\"\r\n            />\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { manageTypes } from '../../../redux/manageModule';\r\nimport { Table, Row, Col } from 'react-bootstrap';\r\nimport UserTable from '../../../components/UserTable';\r\nimport UserForm from '../../../components/UserForm';\r\nimport { useEditInterface } from '../../../hooks/useEditInterface';\r\n\r\nconst EditUser = () => {\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.manage.users);\r\n    const {\r\n        isDisplay,\r\n        value: userValue,\r\n        setValue: setUserValue,\r\n        handleOpenInterface,\r\n        handleCloseInterface,\r\n    } = useEditInterface();\r\n\r\n    useEffect(() => {\r\n        if (!users) return;\r\n        dispatch({ type: manageTypes.GET_ALL_USERS_REQUEST });\r\n    }, []);\r\n\r\n    const handleUpdateUser = userInfo => {\r\n        return (event) => {\r\n            dispatch({ type: manageTypes.UPDATE_USER_REQUEST, payload: userInfo });\r\n            handleCloseInterface();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-gray\">\r\n                <h1 className=\"border font-title mt-2 text-center text-white\">User Manage</h1>\r\n            </div>\r\n            <Row className=\"m-2 min-vh-100 p-2\">\r\n                {isDisplay ? (\r\n                    <Col className=\"d-flex justify-content-center\">\r\n                        <UserForm\r\n                            item={userValue}\r\n                            setUserValue={setUserValue}\r\n                            onUpdateUser={handleUpdateUser}\r\n                            onCloseInterface={handleCloseInterface}\r\n                        />\r\n                    </Col>\r\n                ) : null}\r\n                <Col >\r\n                    <UserTable items={users} onOpenInterface={handleOpenInterface} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default EditUser;\r\n"],"names":["useEditInterface","_useState","useState","_useState2","_slicedToArray","isDisplay","setIsDisplay","_useState3","_useState4","value","setValue","handleOpenInterface","item","handleCloseInterface","_a","onOpenInterface","number","user_name","user_email","user_address","user_role","user_status","create_time","React","className","Number","Button","type","size","onClick","_ref","items","Table","striped","bordered","hover","responsive","map","index","UserItem","key","_id","setUserValue","onUpdateUser","onCloseInterface","user_id","handleInputValue","event","prev","_objectSpread","_defineProperty","target","name","Form","onSubmit","onChange","concat","label","checked","handleStatusValue","FoldIcon","viewBox","width","height","dispatch","useDispatch","users","useSelector","state","manage","_useEditInterface","userValue","useEffect","manageTypes","Row","Col","UserForm","userInfo","payload","UserTable"],"sourceRoot":""}