{"version":3,"file":"914.chunk.js","mappings":"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","sources":["webpack://wave_sight/./src/components/BreadCrumb/index.js","webpack://wave_sight/./src/components/Filter/index.js","webpack://wave_sight/./src/components/ProductCard/index.js","webpack://wave_sight/./src/pages/common/Product/index.js","webpack://wave_sight/./public/assets/images/placeholder.png"],"sourcesContent":["/** @format */\r\n\r\nimport React from 'react';\r\nimport { Breadcrumb } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst BreadCrumb = props => {\r\n    const matchName = location.pathname.startsWith('/wave-sight')\r\n        ? location.pathname.substring('/wave-sight'.length)\r\n        : location.pathname;\r\n    return (\r\n        <Breadcrumb className=\"m-3\">\r\n            {props.matches.map((match, index) => {\r\n                const { path, breadcrumbName } = match.route;\r\n                const isActive = match.pathname === matchName;\r\n\r\n                return isActive ? (\r\n                    <Breadcrumb.Item className=\"font-content fs-5 fw-bold\" key={index} active>\r\n                        {breadcrumbName === 'Detail' ? props.name : breadcrumbName}\r\n                    </Breadcrumb.Item>\r\n                ) : (\r\n                    <Breadcrumb.Item className=\"font-content fs-5 fw-bold\" key={index}>\r\n                        <NavLink to={path}>{breadcrumbName}</NavLink>\r\n                    </Breadcrumb.Item>\r\n                );\r\n            })}\r\n        </Breadcrumb>\r\n    );\r\n};\r\nexport default BreadCrumb;\r\n","/** @format */\r\n\r\nimport React, { useRef } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Filter = ({ onPriceSort }) => {\r\n const priceRef = useRef();\r\n\r\n return (\r\n  <Form>\r\n   <Form.Group>\r\n    <Form.Label className=\"font-content fs-5 fw-bold text-center\" column sm={12}>\r\n     Price\r\n    </Form.Label>\r\n    <Form.Select ref={priceRef} onChange={() => onPriceSort(priceRef.current.value)}>\r\n     <option className=\"font-content fs-6\">Default</option>\r\n     <option className=\"font-content fs-6\" value=\"High\">\r\n      High\r\n     </option>\r\n     <option className=\"font-content fs-6\" value=\"Low\">\r\n      Low\r\n     </option>\r\n    </Form.Select>\r\n   </Form.Group>\r\n  </Form>\r\n );\r\n};\r\nexport default Filter;\r\n","/** @format */\r\n\r\nimport React, { useRef, memo } from 'react';\r\nimport { Col, Card, Placeholder } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nconst ProductCard = ({\r\n    item: {\r\n        _id: product_id,\r\n        product_category,\r\n        product_name,\r\n        product_price,\r\n        product_images,\r\n        product_discount,\r\n    },\r\n}) => {\r\n    return (\r\n        <>\r\n            <Col className=\"d-flex p-1\">\r\n                {product_id ? (\r\n                    <Card\r\n                        border=\"secondary\"\r\n                        className=\"border border-light-gray p-1 w-100\"\r\n                    >\r\n                        <Link to={`/products/${product_category}/${product_id}`}>\r\n                            <LazyLoadImage\r\n                                src={product_images && product_images[0]}\r\n                                className=\"bg-lavender object-fit-fill w-100\"\r\n                                style={{ aspectRatio: '8/13' }}\r\n                            />\r\n                        </Link>\r\n                        <Card.Body className=\"p-1\">\r\n                            <Card.Title as=\"p\" className=\"font-content text-break text-gray\">\r\n                                {product_name}\r\n                            </Card.Title>\r\n                            {product_discount < 1 ? (\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Card.Text className=\"font-content mb-0 mx-1 text-decoration-line-through\">\r\n                                        {product_price}NT$\r\n                                    </Card.Text>\r\n                                    <Card.Text className=\"font-content fs-6 text-red\">\r\n                                        {Math.floor(product_price * product_discount)}NT$\r\n                                    </Card.Text>\r\n                                </div>\r\n                            ) : (\r\n                                <Card.Text className=\"d-flex font-content justify-content-end\">\r\n                                    {product_price}NT$\r\n                                </Card.Text>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                ) : (\r\n                    <Card className=\"w-100\">\r\n                        <Card.Img\r\n                            variant=\"top\"\r\n                            style={{ aspectRatio: '8/13' }}\r\n                            src={require(`${process.env.ASSETS_PATH}placeholder.png`).default}\r\n                        />\r\n                        <Card.Body className=\"d-flex flex-column\">\r\n                            <Placeholder as={Card.Title} animation=\"glow\">\r\n                                <Placeholder xs={12} size=\"lg\" />\r\n                            </Placeholder>\r\n                            <div className=\"d-flex flex-column flex-grow-1 justify-content-end\">\r\n                                <Placeholder as={Card.Text} className=\"text-end\" animation=\"glow\">\r\n                                    <Placeholder xs={8} size=\"lg\" />\r\n                                </Placeholder>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )}\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(ProductCard);\r\n","/** @format */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Outlet, matchRoutes, useMatch } from 'react-router-dom';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport BreadCrumb from '../../../components/BreadCrumb';\r\nimport Filter from '../../../components/Filter';\r\nimport { routes } from '../../../router/routesList';\r\nimport { productTypes } from '../../../redux/productModule';\r\nimport ProductCard from '../../../components/ProductCard';\r\n\r\nconst Product = () => {\r\n  const category = location.pathname.split('/');\r\n  const matchName = location.pathname.startsWith('/wave-sight')\r\n    ? location.pathname.substring('/wave-sight'.length)\r\n    : location.pathname;\r\n  const matches = matchRoutes(routes, matchName);\r\n  const matched = useMatch(`products/${category[category.length - 1]}`);\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(state => state.product[category[category.length - 1]]);\r\n  const [productSort, setProductSort] = useState();\r\n\r\n  useEffect(() => {\r\n    if (matched) {\r\n      dispatch({\r\n        type: productTypes.GET_CATEGORY_PRODUCTS_REQUEST,\r\n        payload: category[category.length - 1],\r\n      });\r\n    }\r\n  }, [matched]);\r\n\r\n  useEffect(() => {\r\n    setProductSort(products);\r\n  }, [products]);\r\n\r\n  const handlePriceSort = sort => {\r\n    let sorted = [...products];\r\n    switch (sort) {\r\n      case 'Low':\r\n        sorted.sort((a, b) => {\r\n          return (\r\n            a.product_price * a.product_discount - b.product_price * b.product_discount\r\n          );\r\n        });\r\n        setProductSort(sorted);\r\n        break;\r\n      case 'High':\r\n        sorted.sort((a, b) => {\r\n          return (\r\n            b.product_price * b.product_discount - a.product_price * a.product_discount\r\n          );\r\n        });\r\n        setProductSort(sorted);\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {matched != null ? (\r\n        <>\r\n          <BreadCrumb matches={matches} />\r\n          <Row className=\"border m-2 min-vh-100 p-2 \">\r\n            <Col md={2} className=\"border border-secondary d-md-block d-none min-vh-100\">\r\n              <Filter onPriceSort={handlePriceSort} />\r\n            </Col>\r\n            <div className=\"d-md-none\">\r\n              <Filter onPriceSort={handlePriceSort} />\r\n            </div>\r\n            <Col sm={12} md={10} className=\"py-2 d-flex\">\r\n              <Row xs={2} md={3} lg={4} xl={5} className=\"p-1\">\r\n                {productSort?.map(product => (\r\n                  <ProductCard key={product._id} item={product} />\r\n                ))}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <Container className=\"min-vh-100 pb-1\">\r\n          <Outlet />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Product;\r\n","export default __webpack_public_path__ + \"public/assets/images/placeholder.png\";"],"names":["props","matchName","location","pathname","startsWith","substring","length","React","Breadcrumb","className","matches","map","match","index","_match$route","route","path","breadcrumbName","key","active","name","NavLink","to","_ref","onPriceSort","priceRef","useRef","Form","column","sm","ref","onChange","current","value","ProductCard","_ref$item","item","product_id","_id","product_category","product_name","product_price","product_images","product_discount","Col","Card","border","Link","concat","LazyLoadImage","src","style","aspectRatio","as","Math","floor","variant","require","Placeholder","animation","xs","size","memo","category","split","matchRoutes","routes","matched","useMatch","dispatch","useDispatch","products","useSelector","state","product","_useState","useState","_useState2","_slicedToArray","productSort","setProductSort","useEffect","type","productTypes","payload","handlePriceSort","sort","sorted","_toConsumableArray","a","b","BreadCrumb","Row","md","Filter","lg","xl","Container","Outlet"],"sourceRoot":""}